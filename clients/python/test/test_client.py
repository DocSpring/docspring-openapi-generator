# coding: utf-8
# Note - this file is just used to generate a scaffold for the tests
# We overwrite it with test_pdf_api.py

"""
    API V1

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    OpenAPI spec version: v1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import mock
import time

import form_api
# from form_api.api.pdf_api import PDFApi  # noqa: E501
from form_api.rest import ApiException
from pprint import pprint

class TestClient(unittest.TestCase):
    """Client unit tests"""

    def setUp(self):
        # Configure HTTP basic authorization: api_token_basic
        configuration = form_api.Configuration()
        configuration.username = 'api_token123'
        configuration.password = 'testsecret123'
        configuration.host = 'localhost:31337/api/v1'
        configuration.scheme = 'http'

        # create an instance of the API class
        self.api = form_api.Client(form_api.ApiClient(configuration))

    def tearDown(self):
        pass

    def test_generate_pdf(self):
        """Test case for generate_pdf

        Generates PDFs
        """
        with mock.patch.object(time, 'sleep') as sleep_patched:
          template_id = 'tpl_000000000000000001'  # str |

          submission = self.api.generate_pdf(
              template_id, {
                  'data': {
                      'title': 'Test PDF',
                      'description': 'This PDF is great!'
                  }
              })
          sleep_patched.assert_called()
          self.assertRegexpMatches(submission.id, '^sub_')
          self.assertEquals(submission.expired, False)
          self.assertEquals(submission.state, 'processed')

    def test_combine_submissions(self):
        """Test case for combine_submissions

        Merge generated PDFs together  # noqa: E501
        """
        with mock.patch.object(time, "sleep") as sleep_patched:
          combined_submission = self.api.combine_submissions({
              'submission_ids': ['sub_000000000000000001', 'sub_000000000000000002']
          })
          sleep_patched.assert_called()
          self.assertRegexpMatches(combined_submission.id, '^com_')
          self.assertEquals(combined_submission.expired, False)
          self.assertEquals(combined_submission.state, 'processed')

if __name__ == '__main__':
    unittest.main()
